{"remainingRequest":"/Users/gideongrossman/Documents/Work/software/upstackLinkTreeTask/linktree/node_modules/babel-loader/lib/index.js!/Users/gideongrossman/Documents/Work/software/upstackLinkTreeTask/linktree/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/gideongrossman/Documents/Work/software/upstackLinkTreeTask/linktree/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gideongrossman/Documents/Work/software/upstackLinkTreeTask/linktree/src/components/Avatar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/gideongrossman/Documents/Work/software/upstackLinkTreeTask/linktree/src/components/Avatar.vue","mtime":1635126907477},{"path":"/Users/gideongrossman/Documents/Work/software/upstackLinkTreeTask/linktree/node_modules/cache-loader/dist/cjs.js","mtime":1623797005800},{"path":"/Users/gideongrossman/Documents/Work/software/upstackLinkTreeTask/linktree/node_modules/babel-loader/lib/index.js","mtime":1623797005467},{"path":"/Users/gideongrossman/Documents/Work/software/upstackLinkTreeTask/linktree/node_modules/cache-loader/dist/cjs.js","mtime":1623797005800},{"path":"/Users/gideongrossman/Documents/Work/software/upstackLinkTreeTask/linktree/node_modules/vue-loader/lib/index.js","mtime":1627937027485}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiQXZhdGFyLnZ1ZSIsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGZpbGU6ICcnLAogICAgICBzaG93UHJldmlldzogZmFsc2UsCiAgICAgIGltYWdlUHJldmlldzogJycsCiAgICAgIG9yaWdpbmFsSW1hZ2U6ICcnLAogICAgICB1cGxvYWRlZE5ld0F2YXRhcjogZmFsc2UsCiAgICAgIHNob3dFZGl0QnV0dG9uOiBmYWxzZQogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLm9yaWdpbmFsSW1hZ2UgPSByZXF1aXJlKCcuLi9hc3NldHMvZ2lkb255YXZhdGFyLnBuZycpOwogIH0sCiAgbWV0aG9kczogewogICAgLyoKICAgICAgICAgICBIYW5kbGVzIGEgY2hhbmdlIG9uIHRoZSBmaWxlIHVwbG9hZAogICAgICAgICAqLwogICAgaGFuZGxlRmlsZVVwbG9hZDogZnVuY3Rpb24gaGFuZGxlRmlsZVVwbG9hZCgpIHsKICAgICAgLyoKICAgICAgICBTZXQgdGhlIGxvY2FsIGZpbGUgdmFyaWFibGUgdG8gd2hhdCB0aGUgdXNlciBoYXMgc2VsZWN0ZWQuCiAgICAgICovCiAgICAgIHRoaXMuZmlsZSA9IHRoaXMuJHJlZnMuZmlsZS5maWxlc1swXTsKICAgICAgLyoKICAgICAgICBJbml0aWFsaXplIGEgRmlsZSBSZWFkZXIgb2JqZWN0CiAgICAgICovCgogICAgICB2YXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKICAgICAgLyoKICAgICAgICBBZGQgYW4gZXZlbnQgbGlzdGVuZXIgdG8gdGhlIHJlYWRlciB0aGF0IHdoZW4gdGhlIGZpbGUKICAgICAgICBoYXMgYmVlbiBsb2FkZWQsIHdlIGZsYWcgdGhlIHNob3cgcHJldmlldyBhcyB0cnVlIGFuZCBzZXQgdGhlCiAgICAgICAgaW1hZ2UgdG8gYmUgd2hhdCB3YXMgcmVhZCBmcm9tIHRoZSByZWFkZXIuCiAgICAgICovCgogICAgICByZWFkZXIuYWRkRXZlbnRMaXN0ZW5lcigibG9hZCIsIGZ1bmN0aW9uICgpIHsKICAgICAgICAvLyAgIHRoaXMuc2hvd1ByZXZpZXcgPSB0cnVlOwogICAgICAgIHRoaXMudXBsb2FkZWROZXdBdmF0YXIgPSB0cnVlOwogICAgICAgIHRoaXMuaW1hZ2VQcmV2aWV3ID0gcmVhZGVyLnJlc3VsdDsKICAgICAgfS5iaW5kKHRoaXMpLCBmYWxzZSk7CiAgICAgIHRoaXMuc2hvd0VkaXRCdXR0b24gPSBmYWxzZTsKICAgICAgLyoKICAgICAgICBDaGVjayB0byBzZWUgaWYgdGhlIGZpbGUgaXMgbm90IGVtcHR5LgogICAgICAqLwoKICAgICAgaWYgKHRoaXMuZmlsZSkgewogICAgICAgIC8qCiAgICAgICAgICBFbnN1cmUgdGhlIGZpbGUgaXMgYW4gaW1hZ2UgZmlsZS4KICAgICAgICAqLwogICAgICAgIGlmICgvXC4oanBlP2d8cG5nfGdpZikkL2kudGVzdCh0aGlzLmZpbGUubmFtZSkpIHsKICAgICAgICAgIC8qCiAgICAgICAgICAgIEZpcmUgdGhlIHJlYWRBc0RhdGFVUkwgbWV0aG9kIHdoaWNoIHdpbGwgcmVhZCB0aGUgZmlsZSBpbiBhbmQKICAgICAgICAgICAgdXBvbiBjb21wbGV0aW9uIGZpcmUgYSAnbG9hZCcgZXZlbnQgd2hpY2ggd2Ugd2lsbCBsaXN0ZW4gdG8gYW5kCiAgICAgICAgICAgIGRpc3BsYXkgdGhlIGltYWdlIGluIHRoZSBwcmV2aWV3LgogICAgICAgICAgKi8KICAgICAgICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKHRoaXMuZmlsZSk7CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["Avatar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,EADA;AAEA,MAAA,WAAA,EAAA,KAFA;AAGA,MAAA,YAAA,EAAA,EAHA;AAIA,MAAA,aAAA,EAAA,EAJA;AAKA,MAAA,iBAAA,EAAA,KALA;AAMA,MAAA,cAAA,EAAA;AANA,KAAA;AAQA,GAXA;AAYA,EAAA,OAZA,qBAYA;AACA,SAAA,aAAA,GAAA,OAAA,CAAA,4BAAA,CAAA;AACA,GAdA;AAeA,EAAA,OAAA,EAAA;AACA;AACA;AACA;AACA,IAAA,gBAJA,8BAIA;AACA;AACA;AACA;AACA,WAAA,IAAA,GAAA,KAAA,KAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AAEA;AACA;AACA;;AACA,UAAA,MAAA,GAAA,IAAA,UAAA,EAAA;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAA,MAAA,CAAA,gBAAA,CAAA,MAAA,EAAA,YAAA;AACA;AACA,aAAA,iBAAA,GAAA,IAAA;AACA,aAAA,YAAA,GAAA,MAAA,CAAA,MAAA;AACA,OAJA,CAIA,IAJA,CAIA,IAJA,CAAA,EAIA,KAJA;AAKA,WAAA,cAAA,GAAA,KAAA;AAEA;AACA;AACA;;AACA,UAAA,KAAA,IAAA,EAAA;AACA;AACA;AACA;AACA,YAAA,sBAAA,IAAA,CAAA,KAAA,IAAA,CAAA,IAAA,CAAA,EAAA;AACA;AACA;AACA;AACA;AACA;AACA,UAAA,MAAA,CAAA,aAAA,CAAA,KAAA,IAAA;AACA;AACA;AACA;AA3CA;AAfA,CAAA","sourcesContent":["<template>\n    <div class=\"row\">\n        <div class=\"col\" @click=\"showEditButton=true\">\n            <img class=\"avatar\" \n                alt=\"GidonyAvatar\" \n                v-b-tooltip.hover title=\"Click image to update.\"\n                :src=\"uploadedNewAvatar?imagePreview:originalImage\">\n        </div>\n\n        <div v-if=\"showEditButton\" class=\"mt-2 large-12 medium-12 small-12 cell\">\n            <button>\n                <input type=\"file\" style=\"color:transparent; width:140px;\" id=\"file\" ref=\"file\" accept=\"image/*\" v-on:change=\"handleFileUpload()\"/>\n                <button class=\"btn btn-info\" @click.prevent=\"showEditButton=false\">Cancel</button>\n            </button>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: \"Avatar.vue\",\n    data() {\n      return {\n        file: '',\n        showPreview: false,\n        imagePreview: '',\n        originalImage: '',\n        uploadedNewAvatar: false,\n        showEditButton: false,\n      }\n    },\n    mounted() {\n        this.originalImage = require('../assets/gidonyavatar.png');\n    },\n    methods: {\n /*\n        Handles a change on the file upload\n      */\n      handleFileUpload(){\n        /*\n          Set the local file variable to what the user has selected.\n        */\n        this.file = this.$refs.file.files[0];\n\n        /*\n          Initialize a File Reader object\n        */\n        let reader  = new FileReader();\n\n        /*\n          Add an event listener to the reader that when the file\n          has been loaded, we flag the show preview as true and set the\n          image to be what was read from the reader.\n        */\n        reader.addEventListener(\"load\", function () {\n        //   this.showPreview = true;\n        this.uploadedNewAvatar = true;\n          this.imagePreview = reader.result;\n        }.bind(this), false);\n        this.showEditButton = false;\n\n        /*\n          Check to see if the file is not empty.\n        */\n        if( this.file ){\n          /*\n            Ensure the file is an image file.\n          */\n          if ( /\\.(jpe?g|png|gif)$/i.test( this.file.name ) ) {\n            /*\n              Fire the readAsDataURL method which will read the file in and\n              upon completion fire a 'load' event which we will listen to and\n              display the image in the preview.\n            */\n            reader.readAsDataURL( this.file );\n          }\n        }\n      }\n    }\n}\n</script>\n\n<style>\n.avatar {\n    border-radius: 50%;\n    width: 96px;\n    height: 96px;\n    /* display: block;\n    object-fit: contain;\n    object-position: initial;\n    filter: none; */\n}\n.avatar:hover {\n    cursor: pointer\n}\n\n</style>"],"sourceRoot":"src/components"}]}