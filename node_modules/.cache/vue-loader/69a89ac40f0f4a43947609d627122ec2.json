{"remainingRequest":"/Users/gideongrossman/Documents/Work/software/upstackLinkTreeTask/linktree/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gideongrossman/Documents/Work/software/upstackLinkTreeTask/linktree/src/components/Avatar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/gideongrossman/Documents/Work/software/upstackLinkTreeTask/linktree/src/components/Avatar.vue","mtime":1635126907477},{"path":"/Users/gideongrossman/Documents/Work/software/upstackLinkTreeTask/linktree/node_modules/cache-loader/dist/cjs.js","mtime":1623797005800},{"path":"/Users/gideongrossman/Documents/Work/software/upstackLinkTreeTask/linktree/node_modules/babel-loader/lib/index.js","mtime":1623797005467},{"path":"/Users/gideongrossman/Documents/Work/software/upstackLinkTreeTask/linktree/node_modules/cache-loader/dist/cjs.js","mtime":1623797005800},{"path":"/Users/gideongrossman/Documents/Work/software/upstackLinkTreeTask/linktree/node_modules/vue-loader/lib/index.js","mtime":1627937027485}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICJBdmF0YXIudnVlIiwKICAgIGRhdGEoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgZmlsZTogJycsCiAgICAgICAgc2hvd1ByZXZpZXc6IGZhbHNlLAogICAgICAgIGltYWdlUHJldmlldzogJycsCiAgICAgICAgb3JpZ2luYWxJbWFnZTogJycsCiAgICAgICAgdXBsb2FkZWROZXdBdmF0YXI6IGZhbHNlLAogICAgICAgIHNob3dFZGl0QnV0dG9uOiBmYWxzZSwKICAgICAgfQogICAgfSwKICAgIG1vdW50ZWQoKSB7CiAgICAgICAgdGhpcy5vcmlnaW5hbEltYWdlID0gcmVxdWlyZSgnLi4vYXNzZXRzL2dpZG9ueWF2YXRhci5wbmcnKTsKICAgIH0sCiAgICBtZXRob2RzOiB7CiAvKgogICAgICAgIEhhbmRsZXMgYSBjaGFuZ2Ugb24gdGhlIGZpbGUgdXBsb2FkCiAgICAgICovCiAgICAgIGhhbmRsZUZpbGVVcGxvYWQoKXsKICAgICAgICAvKgogICAgICAgICAgU2V0IHRoZSBsb2NhbCBmaWxlIHZhcmlhYmxlIHRvIHdoYXQgdGhlIHVzZXIgaGFzIHNlbGVjdGVkLgogICAgICAgICovCiAgICAgICAgdGhpcy5maWxlID0gdGhpcy4kcmVmcy5maWxlLmZpbGVzWzBdOwoKICAgICAgICAvKgogICAgICAgICAgSW5pdGlhbGl6ZSBhIEZpbGUgUmVhZGVyIG9iamVjdAogICAgICAgICovCiAgICAgICAgbGV0IHJlYWRlciAgPSBuZXcgRmlsZVJlYWRlcigpOwoKICAgICAgICAvKgogICAgICAgICAgQWRkIGFuIGV2ZW50IGxpc3RlbmVyIHRvIHRoZSByZWFkZXIgdGhhdCB3aGVuIHRoZSBmaWxlCiAgICAgICAgICBoYXMgYmVlbiBsb2FkZWQsIHdlIGZsYWcgdGhlIHNob3cgcHJldmlldyBhcyB0cnVlIGFuZCBzZXQgdGhlCiAgICAgICAgICBpbWFnZSB0byBiZSB3aGF0IHdhcyByZWFkIGZyb20gdGhlIHJlYWRlci4KICAgICAgICAqLwogICAgICAgIHJlYWRlci5hZGRFdmVudExpc3RlbmVyKCJsb2FkIiwgZnVuY3Rpb24gKCkgewogICAgICAgIC8vICAgdGhpcy5zaG93UHJldmlldyA9IHRydWU7CiAgICAgICAgdGhpcy51cGxvYWRlZE5ld0F2YXRhciA9IHRydWU7CiAgICAgICAgICB0aGlzLmltYWdlUHJldmlldyA9IHJlYWRlci5yZXN1bHQ7CiAgICAgICAgfS5iaW5kKHRoaXMpLCBmYWxzZSk7CiAgICAgICAgdGhpcy5zaG93RWRpdEJ1dHRvbiA9IGZhbHNlOwoKICAgICAgICAvKgogICAgICAgICAgQ2hlY2sgdG8gc2VlIGlmIHRoZSBmaWxlIGlzIG5vdCBlbXB0eS4KICAgICAgICAqLwogICAgICAgIGlmKCB0aGlzLmZpbGUgKXsKICAgICAgICAgIC8qCiAgICAgICAgICAgIEVuc3VyZSB0aGUgZmlsZSBpcyBhbiBpbWFnZSBmaWxlLgogICAgICAgICAgKi8KICAgICAgICAgIGlmICggL1wuKGpwZT9nfHBuZ3xnaWYpJC9pLnRlc3QoIHRoaXMuZmlsZS5uYW1lICkgKSB7CiAgICAgICAgICAgIC8qCiAgICAgICAgICAgICAgRmlyZSB0aGUgcmVhZEFzRGF0YVVSTCBtZXRob2Qgd2hpY2ggd2lsbCByZWFkIHRoZSBmaWxlIGluIGFuZAogICAgICAgICAgICAgIHVwb24gY29tcGxldGlvbiBmaXJlIGEgJ2xvYWQnIGV2ZW50IHdoaWNoIHdlIHdpbGwgbGlzdGVuIHRvIGFuZAogICAgICAgICAgICAgIGRpc3BsYXkgdGhlIGltYWdlIGluIHRoZSBwcmV2aWV3LgogICAgICAgICAgICAqLwogICAgICAgICAgICByZWFkZXIucmVhZEFzRGF0YVVSTCggdGhpcy5maWxlICk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9Cn0K"},{"version":3,"sources":["Avatar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Avatar.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"row\">\n        <div class=\"col\" @click=\"showEditButton=true\">\n            <img class=\"avatar\" \n                alt=\"GidonyAvatar\" \n                v-b-tooltip.hover title=\"Click image to update.\"\n                :src=\"uploadedNewAvatar?imagePreview:originalImage\">\n        </div>\n\n        <div v-if=\"showEditButton\" class=\"mt-2 large-12 medium-12 small-12 cell\">\n            <button>\n                <input type=\"file\" style=\"color:transparent; width:140px;\" id=\"file\" ref=\"file\" accept=\"image/*\" v-on:change=\"handleFileUpload()\"/>\n                <button class=\"btn btn-info\" @click.prevent=\"showEditButton=false\">Cancel</button>\n            </button>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: \"Avatar.vue\",\n    data() {\n      return {\n        file: '',\n        showPreview: false,\n        imagePreview: '',\n        originalImage: '',\n        uploadedNewAvatar: false,\n        showEditButton: false,\n      }\n    },\n    mounted() {\n        this.originalImage = require('../assets/gidonyavatar.png');\n    },\n    methods: {\n /*\n        Handles a change on the file upload\n      */\n      handleFileUpload(){\n        /*\n          Set the local file variable to what the user has selected.\n        */\n        this.file = this.$refs.file.files[0];\n\n        /*\n          Initialize a File Reader object\n        */\n        let reader  = new FileReader();\n\n        /*\n          Add an event listener to the reader that when the file\n          has been loaded, we flag the show preview as true and set the\n          image to be what was read from the reader.\n        */\n        reader.addEventListener(\"load\", function () {\n        //   this.showPreview = true;\n        this.uploadedNewAvatar = true;\n          this.imagePreview = reader.result;\n        }.bind(this), false);\n        this.showEditButton = false;\n\n        /*\n          Check to see if the file is not empty.\n        */\n        if( this.file ){\n          /*\n            Ensure the file is an image file.\n          */\n          if ( /\\.(jpe?g|png|gif)$/i.test( this.file.name ) ) {\n            /*\n              Fire the readAsDataURL method which will read the file in and\n              upon completion fire a 'load' event which we will listen to and\n              display the image in the preview.\n            */\n            reader.readAsDataURL( this.file );\n          }\n        }\n      }\n    }\n}\n</script>\n\n<style>\n.avatar {\n    border-radius: 50%;\n    width: 96px;\n    height: 96px;\n    /* display: block;\n    object-fit: contain;\n    object-position: initial;\n    filter: none; */\n}\n.avatar:hover {\n    cursor: pointer\n}\n\n</style>"]}]}